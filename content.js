console.log("‚úÖ content.js –∑–∞–≥—Ä—É–∂–µ–Ω!"); // –õ–æ–≥ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ

chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {
  console.log("üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ content.js:", request);

  if (request.action === "sendToAI" && request.text) {
    console.log("üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ API:", request.text);
    fetchAIResponse(request.text);
    sendResponse({ status: "OK" });
  }
  return true;
});




async function fetchAIResponse(text) {
  console.log("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ API:", text);

  const apiKey = "D1Z4W8htCRGSG73JuLMKZtIzQOzzZjuFl7kWcphJ"; // –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π –∫–ª—é—á Cohere
  const response = await fetch("https://api.cohere.ai/v1/generate", {
      method: "POST",
      headers: {
          "Authorization": `Bearer ${apiKey}`,
          "Content-Type": "application/json"
      },
      body: JSON.stringify({
          model: "command",
          prompt: text,
          max_tokens: 100
      })
  });

  const data = await response.json();
  console.log("–û—Ç–≤–µ—Ç API:", data);

  if (data.generations && data.generations.length > 0) {
      const answer = data.generations[0].text;
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
      chrome.storage.local.set({ aiResponse: request.answer }, () => {
          console.log("–û—Ç–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.");
          chrome.action.openPopup(); // –û—Ç–∫—Ä—ã–≤–∞–µ–º popup
      });
  } else {
      alert("–û—à–∏–±–∫–∞ API –∏–ª–∏ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç.");
  }
}

